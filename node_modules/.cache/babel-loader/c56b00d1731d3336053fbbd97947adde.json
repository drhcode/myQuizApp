{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DRHTech\\\\Desktop\\\\quizApp\\\\src\\\\components\\\\Quiz.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\";\nimport play from \"../sounds/play.mp3\";\nimport correct from \"../sounds/correct.mp3\";\nimport wrong from \"../sounds/wrong.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz(_ref) {\n  _s();\n\n  let {\n    data,\n    questionNumber,\n    setQuestionNumber,\n    setTimeOut\n  } = _ref;\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [className, setClassName] = useState(\"answer\");\n  const [letsPlay] = useSound(play);\n  const [correctAnswer] = useSound(correct);\n  const [wrongAnswer] = useSound(wrong);\n  useEffect(() => {\n    letsPlay();\n  }, [letsPlay]);\n  useEffect(() => {\n    setQuestion(data[questionNumber - 1]);\n  }, [data, questionNumber]);\n\n  const delay = (duration, callback) => {\n    setTimeout(() => {\n      callback();\n    }, duration);\n  };\n\n  const handleClick = a => {\n    setSelectedAnswer(a);\n    setClassName(\"answer active\");\n    delay(3000, () => {\n      setClassName(a.correct ? \"answer correct\" : \"answer wrong\");\n    }); // setTimeout(() => {\n    //   setClassName(a.correct ? \"answer correct\" : \"answer wrong\");\n    // }, 3000);\n    // setTimeout(() => {\n\n    delay(5000, () => {\n      if (a.correct) {\n        correctAnswer();\n        delay(1000, () => {\n          setQuestionNumber(prev => prev + 1);\n          setSelectedAnswer(null);\n        }); // setTimeout(() => {\n        //   setQuestionNumber((prev) => prev + 1);\n        //   setSelectedAnswer(null);\n        // }, 1000);\n      } else {\n        wrongAnswer();\n        delay(1000, () => {\n          setTimeOut(true);\n        }); // setTimeout(() => {\n        //   setTimeOut(true);\n        // }, 1000);\n      } // }, 5000);\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trivia\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: question === null || question === void 0 ? void 0 : question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: question === null || question === void 0 ? void 0 : question.answers.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: selectedAnswer === a ? className : \"answer\",\n        onClick: () => !selectedAnswer && handleClick(a),\n        children: a.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"Eyd+uLuyMex4gPNE68eVBJaOSqs=\", false, function () {\n  return [useSound, useSound, useSound];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useEffect","useState","useSound","play","correct","wrong","Quiz","data","questionNumber","setQuestionNumber","setTimeOut","question","setQuestion","selectedAnswer","setSelectedAnswer","className","setClassName","letsPlay","correctAnswer","wrongAnswer","delay","duration","callback","setTimeout","handleClick","a","prev","answers","map","text"],"sources":["C:/Users/DRHTech/Desktop/quizApp/src/components/Quiz.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\";\nimport play from \"../sounds/play.mp3\";\nimport correct from \"../sounds/correct.mp3\";\nimport wrong from \"../sounds/wrong.mp3\";\n\nexport default function Quiz({\n  data,\n  questionNumber,\n  setQuestionNumber,\n  setTimeOut,\n}) {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [className, setClassName] = useState(\"answer\");\n  const [letsPlay] = useSound(play);\n  const [correctAnswer] = useSound(correct);\n  const [wrongAnswer] = useSound(wrong);\n\n  useEffect(() => {\n    letsPlay();\n  }, [letsPlay]);\n\n  useEffect(() => {\n    setQuestion(data[questionNumber - 1]);\n  }, [data, questionNumber]);\n\n  const delay = (duration, callback) => {\n    setTimeout(() => {\n      callback();\n    }, duration);\n  };\n\n  const handleClick = (a) => {\n    setSelectedAnswer(a);\n    setClassName(\"answer active\");\n    delay(3000, () => {\n      setClassName(a.correct ? \"answer correct\" : \"answer wrong\");\n    });\n    // setTimeout(() => {\n    //   setClassName(a.correct ? \"answer correct\" : \"answer wrong\");\n    // }, 3000);\n\n    // setTimeout(() => {\n    delay(5000, () => {\n      if (a.correct) {\n        correctAnswer();\n        delay(1000, () => {\n          setQuestionNumber((prev) => prev + 1);\n          setSelectedAnswer(null);\n        });\n        // setTimeout(() => {\n        //   setQuestionNumber((prev) => prev + 1);\n        //   setSelectedAnswer(null);\n        // }, 1000);\n      } else {\n        wrongAnswer();\n        delay(1000, () => {\n          setTimeOut(true);\n        });\n        // setTimeout(() => {\n        //   setTimeOut(true);\n        // }, 1000);\n      }\n      // }, 5000);\n    });\n  };\n  return (\n    <div className=\"trivia\">\n      <div className=\"question\">{question?.question}</div>\n      <div className=\"answers\">\n        {question?.answers.map((a) => (\n          <div\n            className={selectedAnswer === a ? className : \"answer\"}\n            onClick={() => !selectedAnswer && handleClick(a)}\n          >\n            {a.text}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}